shiny::runApp('C:/Users/pakus/Desktop/ch16-shiny/exercise-3')
library(shiny)
library(ggplot2)
# Create a shiny server that creates a scatterplot.
# It should take as an input the x_var, y_var, color, and size
# Save the result of `renderPlot` to output$scatter
shinyServer(function(input, output) {
output$scatter <- renderPlot({
# Store x and y values to plot
x <- mpg[[input$x_var]]
y <- mpg[[input$y_var]]
# Store the title of the graph in a variable
title <- paste0("MPG Dataset: ", input$x_var, " v.s.", input$y_var)
# Create ggplot scatter
p <- ggplot() +
geom_point(mapping = aes(x = x, y = y),
size =  input$size,
color = input$color) +
labs(x = input$x_var, y = input$y_var, title = title)
p
})
})
# UI for scatterplot
library(shiny)
# Get a vector of column names (from `mpg`) to use as select inputs
select_values <- colnames(mpg)
# Create a shinyUI with a `fluidPage` layout
shinyUI(fluidPage(
# A page header
h1("MPG Dataset Exploration"),
# Add a select input for the x variable
selectInput(
"x_var",
label = "X Variable",
choices = select_values,
selected = "displ"
),
# Add a select input for the y variable
selectInput(
"y_var",
label = "Y Variable",
choices = select_values,
selected = "cyl"
),
# Add a sliderInput to set the size of each point
sliderInput("size", label = "Size of point", min = 1, max = 10, value = 5),
# Add a selectInput that allows you to select a color from a list of choices
selectInput(
"color",
label = "Color",
choices = list("Red" = "red", "Blue" = "blue", "Green" = "green")
),
# Plot the output with the name "scatter"
plotOutput("scatter")
))
runApp('C:/Users/pakus/Desktop/ch16-shiny/exercise-3')
setwd("C:/Users/pakus/Desktop/TeamBD5-Final-Project")
# Use something like this for data:
liberal_df <- twListToDF(liberal_tweets)
library(httr)
library(jsonlite)
library(twitteR)
# Use something like this for data:
liberal_df <- twListToDF(liberal_tweets)
liberal_tweets <- searchTwitter("#Liberals")
setup_twitter_oauth(consumer_public, consumer_private, public_key, private_key)
source("api-keys.R")
setup_twitter_oauth(consumer_public, consumer_private, public_key, private_key)
# Use something like this for data:
liberal_df <- twListToDF(liberal_tweets)
liberal_tweets <- searchTwitter("#Liberals")
# Use something like this for data:
liberal_df <- twListToDF(liberal_tweets)
liberal_df
conservative_tweets <- searchTwitter("#Conservatives")
conservative_df <- twListToDF(conservative_tweets)
conservative_tweets <- searchTwitter("#Conservatives")
liberal_tweets <- searchTwitter("#Liberals")
gun_control_tweets <- searchTwitter("#gun control")
anti_gun_control_tweets <- searchTwitter("#noguncontrol")
abortion_tweets <- searchTwitter("#abortion")
anti_abortion_tweets <- searchTwitter("#noabortion")
liberal_df <- twListToDF(liberal_tweets)
conservative_df <- twListToDF(conservative_tweets)
gun_control_df <- twListToDF(gun_control_tweets)
anti_gun_control_df <-twListToDF(anti_gun_control_tweets)
abortion_df <- twListToDF(abortion_tweets)
anti_abortion_df <- twListToDF(anti_abortion_df)
anti_abortion_df <- twListToDF(anti_abortion_tweets)
all_data_merged <- merge(liberal_df,conservative_df,gun_control_df, anti_gun_control_df, abortion_df, anti_abortion_df)
all_data_merged <- merge(liberal_df,conservative_df,gun_control_df)
rbind(liberal_df, conservative_df, gun_control_df)
all_data_merged <- rbind(liberal_df, conservative_df, gun_control_df, anti_gun_control_df, abortion_df, anti_abortion_df)
View(all_data_merged)
shiny::runApp()
ggplot(all_data_merged, aes(x=tweets, y=retweetcount)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
library(ggplot2)
ggplot(all_data_merged, aes(x=tweets, y=retweetcount)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
all_data_merged
ggplot(all_data_merged, aes(x=text, y=retweetcount)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
ggplot(all_data_merged, aes(x=text, y=retweetCount)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
ggplot(all_data_merged, aes(x=text, y=retweetCount)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
